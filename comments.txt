1.Объясните, как вы структурировали свой код и почему
 Последний раз я работал с селенимумом и решил что стуртура Page Object Model отлично подойдет и для этого проекта
 Поэтому здесь есть папка Resources в которой хранятся енам с ошибками и файл с переменными делать отдельный файл с методами которые
 вызывались бы в тест кейсах не стал не тот масштаб пока но можно и так в зависимоти от необходимости
 Фикстуры тоже заводить не стал потому что тут нет действий необходимых для регулярного выполнения

 2. проблем особо не было но учитывая что я не работал с этой апишкой раньше пришлось получить апи ключ, и узнать что
 функции беслптного ключа ограничены. второй интересной задачей стало удостовериться что энедпоинт который возвращает данные
 о погоде на 5 дней возвращает именно на 5 дней, фишка в том что там прогноз на 5 дней вперед через каждые 3 часа то есть 8 показаний
 температуры в сутки = 5 дней * 8 показаний = 40 записей думал привязать проверку на cnt параметр который как раз указывает кол-во записей о погоде но не стал
 и решил привязать на лист самих данный потому что вдруг запрос на cnt 40  а в листе что то сломается и пришлет меньше или больше самих данных о погоде.
 Был вариант зацепится на дату но решил что в этом нет большого смысла так как сам ендпоинт и так возвращает на 5 дней вперед от текущего и мне будет достаточно знать что он вернул парильное кол-во данных

 3. не уверен что есть смысл адаптировать этот тест для тестирования другого апи. с точеи зрения кода он простой и стандартный  тем более важные компоненты как параметры и урл я вынес в отдельный файл
 и если что то поменяется то легко вносить изменения. Для работы с другими параметрами в файле varaibles.py достаточно будет прсото указать их и все. Возможно также будет создать специфические параметры для каждого тест кейса
 если будет необходимость но для данного случая в этом нет необходимости

 4. скриншоты постараюсь приложить

